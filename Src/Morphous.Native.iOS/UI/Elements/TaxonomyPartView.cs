// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using Foundation;
using Morphous.Native.Models;
using UIKit;

namespace Morphous.Native.iOS
{
    public partial class TaxonomyPartView : ElementView<ITaxonomyPart>
    {
        public TaxonomyPartView(IntPtr handle) : base(handle)
        {
        }

        protected override void Bind()
        {
            base.Bind();

            var tableView = DisplayContext.RootView as UITableView;

            if (tableView == null)
            {
                throw new InvalidCastException("The RootView of the current DisplayContext must be a UITableView for TaxonomyPart to work");
            }

            tableView.RowHeight = 44;
            tableView.RegisterClassForCellReuse(typeof(UITableViewCell), "taxonomyitem");
            tableView.Source = new ItemsSource(DisplayContext, Element.Terms);
        }

        private class ItemsSource : UITableViewSource
        {
            private const string _cellId = "taxonomyitem";

            private readonly DisplayContext _displayContext;
            private readonly IList<ITaxonomyItem> _items;

            public ItemsSource(DisplayContext displayContext, IList<ITaxonomyItem> items)
            {
                _displayContext = displayContext;
                _items = items;
            }

            public override nint RowsInSection(UITableView tableview, nint section) => _items.Count;

            public override UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
            {
                var cell = tableView.DequeueReusableCell(_cellId, indexPath);
                var item = _items[indexPath.Row];

                cell.TextLabel.Text = item.Title;

                return cell;
            }

            public override void RowSelected(UITableView tableView, NSIndexPath indexPath)
            {
                var item = _items[indexPath.Row];

                var contentViewController = MphIOS.TableContentItemViewController(item.Id);

                _displayContext.ViewController.ShowViewController(contentViewController, this);
            }
        }
    }
}
